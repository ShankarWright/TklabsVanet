<?xml version="1.0" encoding="utf-8"?>
<BuildConfig version="1">

<var name="MAKE">make</var>
<var name="BR2_LEVEL" exported="true">$${NUMCPU}</var>

<var target="clean" name="MAKE_ARGS">clean</var>

<object name="help" target="help">
    <echo>tkbuild options:</echo>
    <echo>- config    - configure everything for build (do once)</echo>
    <echo>- toolchain - extract a pre-built toolchain for kernel building</echo>
    <echo>- world     - builds the world, creates output files, etc.</echo>
    <echo>- buildroot - builds initial buildroot and toolchain</echo>
    <echo>- kernel    - builds linux kernel, builds buildroot</echo>
    <echo>- nfsroot   - builds NFSROOT</echo>
    <echo>- extmod    - builds out-of-tree kernel modules</echo>
    <echo>- ath	    - builds ath5k driver</echo>
    <echo>- clean     - clean out everything</echo>
</object>

<!--
    "Clean" Targets
-->
<object name="clean" target="clean">
    <Del dest="build/*" />
    <Del dest="scratch/*" />
</object>

<!--
    Pre-compiled Toolchain
-->
<object name="toolchain" target="toolchain config">
    <echo>Extracting pre-build toolchain...</echo>
    <Run>sudo tar xJf source/alix_toolchain.tar.xz -C /</Run>
</object>

<!--
    "Config" Targets
-->
<object name="buildroot-config" target="config buildroot-config">
    <echo>Configuring buildroot...</echo>
    <Run>tar xzf source/buildroot-2013.02.tar.gz -C build</Run>
    <Copy src="config/buildroot_config_3.4.39" dest="build/buildroot-2013.02/.config" />
    <Copy src="config/busybox-1.21.x.config" dest="build/buildroot-2013.02/package/busybox/busybox-1.21.x.config.tklabs" />
    <Run>chmod +w build/buildroot-2013.02/package/busybox/busybox-1.21.x.config.tklabs</Run>
</object>

<object name="kernel-config" target="config kernel-config">
    <echo>Configuring kernel...</echo>
    <Run>tar xjf source/linux-3.4.39.tar.bz2 -C build</Run>
    <Copy src="scripts/crossmake" dest="build/linux-3.4.39/crossmake" />
    <Run>chmod +x build/linux-3.4.39/crossmake</Run>
</object>

<object name="kernel-config2" target="config" directory="build/linux-3.4.39">
    <Run>./crossmake mrproper</Run>
    <Copy src="../../config/linux_config_3.4.39" dest=".config" />
    <Run>./crossmake oldconfig</Run>
</object>

<!--
    "Build" Targets
-->
<object name="buildroot-build" target="buildroot world" directory="build/buildroot-2013.02">
    <Run>../../scripts/warn_toolchain.sh</Run>
    <Run>$${MAKE} $${MAKE_ARGS}</Run>
</object>

<object name="kernel-build" target="kernel world" directory="build/linux-3.4.39">
    <Copy src="../../external_modules/net/wireless/db.txt" dest="net/wireless/db.txt" />
    <Copy src="../../external_modules/net/wireless/genregdb.awk" dest="net/wireless/genregdb.awk" />
    <Run>./crossmake $${NCPU} all</Run>
    <Run ignoreerror="true">./crossmake install 2>/dev/null</Run>
    <Run>./crossmake modules_install >/dev/null</Run>
</object>

<object name="ath" target="ath extmod" directory="external_modules/drivers/net/wireless/ath">       
    <echo>Building Atheros ath5k driver</echo>
    <Run>./crossmake all</Run>
    <Run>./crossmake modules_install</Run>
</object>

<object name="mac" target="mac extmod" directory="external_modules/net/mac80211/">
    <echo>Building mac80211 module</echo>
    <Run>./crossmake all</Run>
    <Run>./crossmake modules_install</Run>
</object>

<object name="cfg" target="cfg extmod" directory="external_modules/net/wireless/">
    <echo>Building cfg80211 module</echo>
    <Run>./crossmake all</Run>
    <Run>./crossmake modules_install</Run>
</object>


<!--
    "Output" Targets
-->
<object name="nfsroot" target="nfsroot world">
    <echo>Building NFSROOT...</echo>
    <Run>cm co output/*</Run>
    <Run ignoreerror="true">gzip -c build/buildroot-2013.02/output/images/rootfs.tar > output/rootfs.tar.gz</Run>
</object>

<object name="nfsroot" target="nfsroot world" directory="scratch">
    <Run ignoreerror="true">tar czf ../output/kernel_modules.tar.gz lib</Run>
    <Copy src="vmlinuz-3.4.39" dest="../output" />
    <Copy src="config-3.4.39" dest="../output" />
    <Copy src="System.map-3.4.39" dest="../output" />
</object>

</BuildConfig>
